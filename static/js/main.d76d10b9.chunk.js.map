{"version":3,"sources":["components/Dropdown.js","colors.js","helpers.js","components/PieChart.js","components/LineChart.js","App.js","index.js"],"names":["Dropdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeSelect","bind","assertThisInitialized","e","onChangeSelect","target","textContent","toLowerCase","react_default","a","createElement","className","href","data-toggle","onClick","Component","colors","Helpers","element","width","getBoundingClientRect","string","toUpperCase","slice","defaultString","PieChart","myRef","React","createRef","selected","isSelected","renderChart","_this2","runDimensionPie","crossFilter","dimension","d","item_category","sumGroupPie","group","reduceSum","parameter","chartPie","dc","pieChart","pieHeader","current","setPieHeader","height","calcHeight","innerRadius","legend","ordinalColors","on","chart","pastElements","getMemoryData","length","setMemoryData","setClassToSlice","selectAll","text","endAngle","startAngle","Math","PI","utils","printSingleValue","Number","parseFloat","data","value","toFixed","filter","prevFilters","categoriesOrder","setColorForSlices","chartLine","resetPieData","handleSlicesData","setYAxisTitle","render","renderAll","_this3","push","key","colorAccessor","indexOf","splice","isMore","isMoreValue","yAxisLabel","concat","capitalizeFirstLetter","attr","innerText","initialPieText","returnValue","ref","id","LineChart","runDimensionLinear","week_ref","sumGroupLinear","lineChart","xAxisRange","setAxisRange","dataRangeText","x","d3","domain","runMin","runMax","margins","top","right","bottom","left","xAxisLabel","renderDataPoints","clipPadding","colorDomain","setPieTitle","addFilterHandler","filters","binsIn","all","kv","isFiltered","getDataRangeText","brush","window","setTimeout","filterAll","redraw","setChartLine","firstValue","ceil","secondValue","floor","csvData","App","state","then","setState","changeOnResize","addEventListener","crossfilter","components_PieChart","components_LineChart","selectedItem","property","data-color","data-image","resetAll","components_Dropdown","getInitData","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d76d10b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../style/style.css';\r\n\r\nclass Dropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChangeSelect = this.handleChangeSelect.bind(this)\r\n    }\r\n\r\n    handleChangeSelect(e) {\r\n        this.props.onChangeSelect(e.target.textContent.toLowerCase());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"dropdown\">\r\n                <a href=\"index.html\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                    <p className=\"inner-list-item\">\r\n                        Select Category\r\n                        <b className=\"caret\"></b>\r\n                    </p>\r\n                </a>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li><div className=\"div-link\" onClick={this.handleChangeSelect}>Markdown</div></li>\r\n                    <li><div className=\"div-link\" onClick={this.handleChangeSelect}>Revenues</div></li>\r\n                    <li><div className=\"div-link\" onClick={this.handleChangeSelect}>Margin</div></li>\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dropdown\r\n","let colors = [\r\n    '#3182BD',\r\n    '#6BAED6',\r\n    '#9ECAE1',\r\n    '#C6DBEF',\r\n    '#E6550D',\r\n    '#FD8D3C',\r\n    '#FDAE6B',\r\n    '#FDD0A2',\r\n    '#31A354',\r\n    '#74C476',\r\n    '#A1D99B',\r\n    '#C7E9C0',\r\n    '#756BB1',\r\n    '#A5A0CC',\r\n    '#BBB3CC',\r\n    '#C8C7CC',\r\n    '#C9CC82'\r\n];\r\n\r\nexport default colors;\r\n","class Helpers {\r\n\r\n    //Set height for desktop or mobile\r\n    static calcHeight(element) {\r\n        let width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;\r\n        return (width && width < 400) ? 200 : 300\r\n    }\r\n\r\n    static capitalizeFirstLetter(string) {\r\n        return string[0].toUpperCase() + string.slice(1)\r\n    }\r\n\r\n    static returnValue(string, defaultString) {\r\n        return !!string ? string : defaultString\r\n    }\r\n}\r\n\r\nexport { Helpers };","import React, { Component } from 'react';\nimport dc from 'dc';\nimport colors from '../colors';\nimport { Helpers } from '../helpers';\nimport '../style/style.css';\n\nclass PieChart extends Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    componentDidUpdate() {\n        if (this.props.selected) {\n            this.props.isSelected(false);\n            this.renderChart();\n        }\n    }\n\n    renderChart() {\n        let runDimensionPie             = this.props.crossFilter.dimension(function(d) {return d.item_category;}),\n            sumGroupPie                 = runDimensionPie.group().reduceSum(function(d) {return d[parameter];}),\n            chartPie                    = dc.pieChart('#pie-chart'),\n            parameter                   = this.props.parameter,\n            pieHeader                   = this.myRef.current;\n\n        this.props.setPieHeader(pieHeader);\n\n        chartPie\n            .height((element) => Helpers.calcHeight(element))\n            .innerRadius(50)\n            .dimension(runDimensionPie)\n            .group(sumGroupPie)\n            .legend(dc.legend())\n            .ordinalColors(colors)\n            //workaround for #703: not enough data is accessible through .label() to display percentages\n            .on('pretransition', (chart) => {\n                let pastElements = this.props.getMemoryData('prevFilters');\n\n                if (!pastElements[pastElements.length - 1]) {\n                    pastElements = [];\n                    this.props.setMemoryData('prevFilters', []);\n                }\n                this.setClassToSlice(chart, pastElements);\n                chart.selectAll('text.pie-slice').text(function(d) {\n                    let resultAngle = (d.endAngle - d.startAngle) / (2 * Math.PI) * 100;\n                    if (resultAngle >= 3)\n                        return dc.utils.printSingleValue(Number.parseFloat(d.data.value).toFixed(2));\n                });\n            })\n            .on('filtered.monitor', (chart, filter) => {\n                let prevFilters = this.props.getMemoryData('prevFilters');\n                let categoriesOrder = this.props.getMemoryData('categoriesOrder');\n\n                if (!filter) {\n                    this.resetPieData(pieHeader);\n                    prevFilters = [];\n                } else {\n                    this.setColorForSlices(chart, categoriesOrder, this.props.chartLine, filter);\n\n                    this.setClassToSlice(chart, prevFilters);\n                }\n\n                this.handleSlicesData(prevFilters, this.props.chartLine, parameter, filter);\n                this.setYAxisTitle(this.props.chartLine, prevFilters, parameter);\n                this.props.chartLine.render();\n            });\n\n        dc.renderAll();\n    }\n\n    setColorForSlices(chart, categoriesOrder, chartLine, filter) {\n        //push names of the groups to array that indicates current color's order\n        chart.selectAll('text.pie-slice').text((d) => {\n            let categoriesOrder = this.props.getMemoryData('categoriesOrder');\n            categoriesOrder.push(d.data.key);\n            this.props.setMemoryData('categoriesOrder', categoriesOrder);\n        });\n        //return color index that matches index in the current color array\n        chartLine.colorAccessor(() => {\n            return categoriesOrder.indexOf(filter)\n        });\n    }\n\n    handleSlicesData(prevFilters, chartLine, parameter, filter) {\n        if (~prevFilters.indexOf(filter)) {\n            //remove prevFilters value if it unchecked\n            prevFilters.splice(prevFilters.indexOf(filter), 1);\n            if (!prevFilters.length) {\n                //set initial text for Y axis if all pie slices are unchecked\n                this.setYAxisTitle(chartLine, null, parameter);\n            }\n        } else {\n            //add one filter to comparison array\n            prevFilters = this.props.getMemoryData('prevFilters');\n            prevFilters.push(filter);\n        }\n        this.props.setMemoryData('prevFilters', prevFilters);\n    }\n\n    setYAxisTitle(chartLine, prevFilters, parameter) {\n        let isMore;\n        isMore = (prevFilters) ? this.isMoreValue(prevFilters): '';\n        return chartLine.yAxisLabel(`${isMore || 'All'}  ${Helpers.capitalizeFirstLetter(parameter)} Sum`);\n    }\n\n    setClassToSlice(chart, prevFilters) {\n        chart.selectAll('g.pie-slice > path').attr('class', function(d) {\n            if (~prevFilters.indexOf(d.data.key)) {\n                return 'pie-selected';\n            } else {\n                return null;\n            }\n        });\n    }\n\n    isMoreValue(prevFilters) {\n        return (prevFilters.length > 1) ? 'Selected' : prevFilters[0];\n    }\n\n    resetPieData(pieHeader) {\n        this.props.setMemoryData('dataRangeText', []);\n        this.props.setMemoryData('prevFilters', []);\n        pieHeader.innerText = this.props.initialPieText;\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"header\">\n                    <h4 className=\"title\">\n                        { Helpers.capitalizeFirstLetter(Helpers.returnValue(this.props.parameter, 'markdown')) + ' Statistics' }\n                    </h4>\n                    <p className=\"category\" ref={this.myRef}>{this.props.initialPieText}</p>\n                </div>\n                <div className=\"content\">\n                    <div id=\"pie-chart\" className=\"ct-chart\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PieChart\n","import React, { Component } from 'react';\nimport dc from 'dc';\nimport * as d3 from 'd3';\nimport colors from '../colors';\nimport { Helpers } from '../helpers';\nimport '../style/style.css';\n\nclass LineChart extends Component {\n    componentDidMount() {\n        this.renderChart();\n    }\n\n    componentDidUpdate() {\n        if (this.props.selected) {\n            this.props.isSelected(false);\n            this.renderChart();\n        }\n    }\n\n    renderChart() {\n\n        let runDimensionLinear             = this.props.crossFilter.dimension(function(d) {return +d.week_ref;}),\n            sumGroupLinear                 = runDimensionLinear.group().reduceSum(function(d) {return d[parameter];}),\n            chartLine                      = dc.lineChart('#line-chart'),\n            parameter                      = this.props.parameter,\n            xAxisRange                     = this.setAxisRange(runDimensionLinear, 'week_ref'),\n            dataRangeText                  = this.props.getMemoryData('dataRangeText');\n\n        chartLine\n            .height((element) => Helpers.calcHeight(element))\n            .x(d3.scaleLinear().domain([xAxisRange.runMin, xAxisRange.runMax]))\n            .margins({top: 10, right: 10, bottom: 50, left: 60})\n            .xAxisLabel('Week Number')\n            .yAxisLabel(`All ${Helpers.capitalizeFirstLetter(parameter)} Sum`)\n            .renderDataPoints(true)\n            .clipPadding(10)\n            .dimension(runDimensionLinear)\n            .group(sumGroupLinear)\n            .colors(colors)\n            .colorDomain ([0,16])\n            .on('pretransition', () => {\n                if (this.props.getMemoryData('dataRangeText').length)  {this.setPieTitle(['pastValue'], this.props.pieHeader, dataRangeText)}\n            })\n            .addFilterHandler((filters, filter) => {\n                let binsIn = chartLine.group().all().filter(function(kv) {\n                    return filter.isFiltered(kv.key) && kv.value;\n                });\n                dataRangeText = this.getDataRangeText(filter);\n                this.setPieTitle(binsIn, this.props.pieHeader, dataRangeText);\n                return binsIn.length ? [filter] : [];\n            })\n            //apply brush filter\n            .brush().on('brushend.no-empty', () => {\n            if(!chartLine.filters().length)\n                window.setTimeout(() => {\n                    chartLine.filterAll().redraw();\n                }, 100);\n        });\n\n        this.props.setChartLine(chartLine);\n\n        dc.renderAll();\n    }\n\n    setAxisRange(runDimensionLinear, key) {\n        let runMin = +runDimensionLinear.bottom(1)[0][key];\n        let runMax = +runDimensionLinear.top(1)[0][key];\n        return {runMin, runMax}\n    }\n\n    getDataRangeText(filter) {\n        let firstValue = Math.ceil(filter[0]);\n        let secondValue = Math.floor(filter[filter.length - 1]);\n        return (filter.length === 1) ? firstValue : firstValue + ' - ' + secondValue;\n    }\n\n    setPieTitle(binsIn, pieHeader, dataRangeText) {\n        if (binsIn.length) {\n            pieHeader.innerText = 'Weeks: ' + dataRangeText;\n            return dataRangeText\n        } else {\n            pieHeader.innerText = this.props.initialPieText;\n            this.props.setMemoryData('dataRangeText', '');\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"header\">\n                    <h4 className=\"title\">Time Line Chart</h4>\n                    <p className=\"category\">Actual data for {\n                        Helpers.returnValue(this.props.csvData[0] && this.props.csvData[0]['year_ref'], '2014')}</p>\n                </div>\n                <div className=\"content\">\n                    <div id=\"line-chart\" className=\"ct-chart\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LineChart\n","import React, { Component } from 'react';\r\nimport Dropdown from './components/Dropdown'\r\nimport * as d3 from 'd3';\r\nimport dc from 'dc';\r\nimport crossfilter from 'crossfilter';\r\nimport PieChart from './components/PieChart';\r\nimport LineChart from './components/LineChart';\r\n\r\nimport './style/style.css';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            csvData: null,\r\n            parameter: 'markdown',\r\n            prevFilters: [],\r\n            categoriesOrder: [],\r\n            dataRangeText: [],\r\n            pieHeader: {},\r\n            selected: true\r\n        };\r\n        this.onChangeSelect = this.onChangeSelect.bind(this);\r\n        this.setMemoryData = this.setMemoryData.bind(this);\r\n        this.getMemoryData = this.getMemoryData.bind(this);\r\n        this.setPieHeader = this.setPieHeader.bind(this);\r\n        this.setChartLine = this.setChartLine.bind(this);\r\n        this.isSelected = this.isSelected.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        d3.csv(\"data.csv\").then((csvData) => {\r\n            this.setState({csvData: csvData});\r\n        });\r\n        this.changeOnResize();\r\n    }\r\n\r\n    changeOnResize() {\r\n        window.addEventListener('resize', () => {\r\n            dc.renderAll();\r\n        });\r\n    }\r\n\r\n    getInitData() {\r\n        if (this.state.csvData) {\r\n            let crossFilter = crossfilter(this.state.csvData);\r\n\r\n            return(\r\n                <div className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <PieChart\r\n                                    parameter={this.state.parameter}\r\n                                    csvData={this.state.csvData}\r\n                                    crossFilter={crossFilter}\r\n                                    setMemoryData={this.setMemoryData}\r\n                                    getMemoryData={this.getMemoryData}\r\n                                    setPieHeader={this.setPieHeader}\r\n                                    initialPieText='For all categories'\r\n                                    chartLine={this.state.chartLine}\r\n                                    selected={this.state.selected}\r\n                                    isSelected={this.isSelected}/>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <LineChart\r\n                                    parameter={this.state.parameter}\r\n                                    csvData={this.state.csvData}\r\n                                    crossFilter={crossFilter}\r\n                                    setMemoryData={this.setMemoryData}\r\n                                    getMemoryData={this.getMemoryData}\r\n                                    pieHeader={this.state.pieHeader}\r\n                                    initialPieText='For all categories'\r\n                                    setChartLine={this.setChartLine}\r\n                                    selected={this.state.selected}\r\n                                    isSelected={this.isSelected}/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    onChangeSelect(selectedItem) {\r\n        this.setState({parameter: selectedItem});\r\n        this.setState({selected: true});\r\n    }\r\n\r\n    isSelected(value) {\r\n        this.setState({selected: value});\r\n    }\r\n\r\n    setMemoryData(property, value) {\r\n        switch(property) {\r\n            case 'prevFilters':\r\n                return this.setState({\r\n                    prevFilters: value\r\n                });\r\n            case 'categoriesOrder':\r\n                return this.setState({\r\n                    categoriesOrder: value\r\n                });\r\n            default:\r\n                return this.setState({\r\n                    dataRangeText: value\r\n                });\r\n        }\r\n    }\r\n\r\n    getMemoryData(property) {\r\n        switch(property) {\r\n            case 'prevFilters':\r\n                return this.state.prevFilters;\r\n            case 'categoriesOrder':\r\n                return this.state.categoriesOrder;\r\n            default:\r\n                return this.state.dataRangeText;\r\n        }\r\n    }\r\n\r\n    setPieHeader(value) {\r\n        return this.setState({\r\n            pieHeader: value\r\n        });\r\n    }\r\n\r\n    setChartLine(value) {\r\n        return this.setState({\r\n            chartLine: value\r\n        });\r\n    }\r\n\r\n    resetAll() {\r\n        dc.filterAll();\r\n        dc.renderAll();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"sidebar\" data-color=\"purple\" data-image=\"assets/img/sidebar-5.jpg\">\r\n                    <div className=\"sidebar-wrapper\">\r\n                        <div className=\"logo\">\r\n                            <a href=\"http://www.creative-tim.com\" className=\"simple-text\">\r\n                                Creative Tim\r\n                            </a>\r\n                        </div>\r\n\r\n                        <ul className=\"nav\">\r\n                            <li className=\"active\">\r\n                                <a href=\"index.html\">\r\n                                    <i className=\"pe-7s-graph\"></i>\r\n                                    <p>Dashboard</p>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"main-panel\">\r\n                    <nav className=\"navbar navbar-default navbar-fixed\">\r\n                        <div className=\"container-fluid container-header\">\r\n                            <div className=\"navbar-header\">\r\n                                <a className=\"navbar-brand\" href=\"index.html\">Statistics Dashboard</a>\r\n                            </div>\r\n                            <div className=\"header-item-right\">\r\n                                <ul className=\"nav navbar-nav navbar-right\">\r\n                                    <li>\r\n                                        <div className=\"div-link\" onClick={this.resetAll}>\r\n                                            <p className=\"inner-list-item\">Reset All</p>\r\n                                        </div>\r\n                                    </li>\r\n\r\n                                    <Dropdown onChangeSelect = {this.onChangeSelect} />\r\n\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n\r\n                    {this.getInitData()}\r\n\r\n                    <footer className=\"footer\">\r\n                        <div className=\"container-fluid\">\r\n                            <p className=\"copyright pull-right\">\r\n                                &copy; <script>document.write(new Date().getFullYear())</script> <a href=\"http://www.creative-tim.com\">Creative Tim</a>, made with love for a better web\r\n                            </p>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}